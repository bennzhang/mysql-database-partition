-- Range(ID)
CREATE TABLE test.`TABLE_NAME` (  
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `value` VARCHAR(100) DEFAULT NULL,
  PRIMARY KEY (`ID`)
)  PARTITION BY RANGE(ID)
(
   PARTITION p0 VALUES LESS THAN (1000),
   PARTITION p1 VALUES LESS THAN (2000),
   PARTITION p2 VALUES LESS THAN (3000),
   PARTITION p3 VALUES LESS THAN (4000),
   PARTITION p4 VALUES LESS THAN (MAXVALUE)
);

-- Range (Date)
CREATE TABLE test.`MONTHLY_TABLE` (  
  `ID` INT(10) NOT NULL AUTO_INCREMENT,
  `value` VARCHAR(100) DEFAULT NULL,
  `DATA_DATE` DATE NOT NULL,
  PRIMARY KEY (`ID`,`DATA_DATE`)
) PARTITION BY RANGE( TO_DAYS(DATA_DATE) ) (
    PARTITION pmin VALUES LESS THAN (TO_DAYS('2017-01-01')),
    PARTITION p201701 VALUES LESS THAN (TO_DAYS('2017-02-01')),
    PARTITION p201702 VALUES LESS THAN (TO_DAYS('2017-03-01')),
    PARTITION p201703 VALUES LESS THAN (TO_DAYS('2017-04-01')),
    PARTITION pmax VALUES LESS THAN (MAXVALUE)
);

-- List (Cyclic)
CREATE TABLE test.`CYCLIC_TABLE` (  
  `ID` INT(10) NOT NULL AUTO_INCREMENT,
  `DATA_DATE` DATE NOT NULL,
  PRIMARY KEY (`ID`,`DATA_DATE`)
  ) PARTITION BY LIST(MOD(TO_DAYS(DATA_DATE), 30)) (
    PARTITION p0 VALUES IN (0),
    PARTITION p1 VALUES IN (1),
    PARTITION p2 VALUES IN (2),
    PARTITION p3 VALUES IN (3),
    PARTITION p4 VALUES IN (4),
    PARTITION p5 VALUES IN (5),
    PARTITION p6 VALUES IN (6),
    PARTITION p7 VALUES IN (7),
    PARTITION p8 VALUES IN (8),
    PARTITION p9 VALUES IN (9),
    PARTITION p10 VALUES IN (10),
    PARTITION p11 VALUES IN (11),    
    PARTITION p12 VALUES IN (12),
    PARTITION p13 VALUES IN (13),
    PARTITION p14 VALUES IN (14),
    PARTITION p15 VALUES IN (15),
    PARTITION p16 VALUES IN (16),    
    PARTITION p17 VALUES IN (17),
    PARTITION p18 VALUES IN (18),
    PARTITION p19 VALUES IN (19),    
    PARTITION p20 VALUES IN (20),
    PARTITION p21 VALUES IN (21),    
    PARTITION p22 VALUES IN (22),
    PARTITION p23 VALUES IN (23),
    PARTITION p24 VALUES IN (24),
    PARTITION p25 VALUES IN (25),
    PARTITION p26 VALUES IN (26),    
    PARTITION p27 VALUES IN (27),
    PARTITION p28 VALUES IN (28),
    PARTITION p29 VALUES IN (29)    
);


-- Hash 
CREATE TABLE test.`HASH_TABLE` (  
  `ID` INT(10) NOT NULL AUTO_INCREMENT,
  `DATA_DATE` DATE NOT NULL,
  PRIMARY KEY (`ID`,`DATA_DATE`)
  ) PARTITION BY HASH(YEAR(DATA_DATE))
  PARTITIONS 10;

-- Hash (cyclic)
CREATE TABLE test.`CYCLIC_TABLE2` (
  `ID` INT(10) NOT NULL AUTO_INCREMENT,
  `DATA_DATE` DATE NOT NULL,
  PRIMARY KEY (`ID`,`DATA_DATE`)
  ) PARTITION BY HASH(TO_DAYS(DATA_DATE))
  PARTITIONS 30;

